REPORT ZCC.


REPORT ZPROG_INTACTIVE_ALV01.

DATA V_KUNNR TYPE KNA1-KUNNR.
SELECT-OPTIONS CUST_NO FOR V_KUNNR DEFAULT '1000' TO '1030'.
DATA : OB1_CONT TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       OB1_GRID TYPE REF TO CL_GUI_ALV_GRID,
       OB2_CONT TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       OB2_GRID TYPE REF TO CL_GUI_ALV_GRID,
       OB3_CONT TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
       OB3_GRID TYPE REF TO CL_GUI_ALV_GRID.


TYPES : BEGIN  OF TY_KNA1.
         INCLUDE TYPE ZROHITKNA1.
        TYPES END OF TY_KNA1.
DATA : IT_KNA1 TYPE STANDARD TABLE OF TY_KNA1,
       WA_KNA1 TYPE TY_KNA1.
TYPES : BEGIN OF TY_VBAK.
           INCLUDE TYPE ZROHITVBAK.
TYPES : NETWR TYPE VBAK-NETWR,
        END OF TY_VBAK.
DATA : IT_VBAK TYPE TABLE OF TY_VBAK,
       WA_VBAK TYPE TY_VBAK.

TYPES : BEGIN OF TY_FINAL_VBAK.
           INCLUDE TYPE ZROHITVBAK.
TYPES : NETWR TYPE VBAK-NETWR,
        CELLSTYLE TYPE LVC_T_STYL,
        END OF TY_FINAL_VBAK.
DATA : IT_FINAL_VBAK TYPE TABLE OF TY_FINAL_VBAK,
       WA_FINAL_VBAK TYPE TY_FINAL_VBAK.

TYPES : BEGIN OF TY_VBAP.
         INCLUDE TYPE ZROHITVBAP.
       TYPES END OF TY_VBAP.

DATA : IT_VBAP TYPE TABLE OF TY_VBAP,
       WA_VBAP TYPE TY_VBAP.


DATA WA_STYL TYPE LVC_S_STYL.

DATA WA_LAYO TYPE LVC_S_LAYO.

DATA : IT_FCAT TYPE LVC_T_FCAT,
       WA_FCAT TYPE LVC_S_FCAT.

CLASS LCL_EVENTRECEIVER DEFINITION.
      PUBLIC SECTION.
         METHODS HANDLE_DOUBLE_CLICK FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN.
         METHODS HANDLE_BUTTON_CLICK FOR EVENT BUTTON_CLICK OF CL_GUI_ALV_GRID IMPORTING ES_COL_ID ES_ROW_NO.
         METHODS HANDLE_HOTSPOT_CLICK FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID IMPORTING E_ROW_ID.
ENDCLASS.

CLASS LCL_EVENTRECEIVER IMPLEMENTATION.
       METHOD HANDLE_DOUBLE_CLICK.
         CASE E_COLUMN-FIELDNAME.
           WHEN 'KUNNR'.
*            MESSAGE 'DOUBLE CLICKED ON CUSTOMER NO' TYPE 'I'. "EVENT DOUBLE_CLICK IS TRIGEERED.
* GET SELECTED CUSTOMER NO.
           READ TABLE IT_KNA1 INTO WA_KNA1 INDEX E_ROW-INDEX TRANSPORTING KUNNR.
           IF SY-SUBRC EQ 0.
* GET CORRESPONDING SALES ORDER DATA FOR SELECTED CUSTOMER NO.
           PERFORM GETVBAK.
          IF IT_FINAL_VBAK IS NOT INITIAL.
              CALL SCREEN 200.
           ELSE.
              MESSAGE ' NO SALES ORDER DATA AVAILABLE FOR SELECTED CUSTOMER' TYPE 'I'.
          ENDIF.
           ENDIF.
           WHEN OTHERS.
             MESSAGE ' PLEASE CLICK ON CUSTOMER NO ONLY' TYPE 'I'.
         ENDCASE.
        ENDMETHOD.
      METHOD HANDLE_BUTTON_CLICK.
        CASE ES_COL_ID-FIELDNAME.
          WHEN 'VBELN'.
*          MESSAGE 'CLICKED ON PUSH BUTTON' TYPE 'I'.
            READ TABLE IT_FINAL_VBAK INTO WA_FINAL_VBAK INDEX ES_ROW_NO-ROW_ID TRANSPORTING VBELN.
              IF SY-SUBRC EQ 0.
* GET SALES ITEM DATA FOR CLICKED SALES DOCUMENT.
                 PERFORM GETVBAP.
                   IF IT_VBAP IS NOT INITIAL.
                      CALL SCREEN 300.
                      ELSE.
                        MESSAGE 'NO SALES ITEM DATA FOR SELECTED/CLICKED SALES DOCUMENT' TYPE 'I'.
                   ENDIF.
              ENDIF.
          WHEN OTHERS.
          MESSAGE 'PLEASE CLICK ONLY ON SALES DOCUMENT' TYPE 'I'.
        ENDCASE.
      ENDMETHOD.

      METHOD HANDLE_HOTSPOT_CLICK.
          CLEAR WA_VBAP.
          READ TABLE IT_VBAP INTO WA_VBAP INDEX E_ROW_ID-INDEX TRANSPORTING MATNR.
          IF SY-SUBRC EQ 0.
             SET PARAMETER ID 'MAT' FIELD WA_VBAP-MATNR.
             CALL TRANSACTION 'MM03'.
          ENDIF.

      ENDMETHOD.
ENDCLASS.

DATA OB1 TYPE REF TO LCL_EVENTRECEIVER.

START-OF-SELECTION.
CALL SCREEN 100.
MODULE STATUS_0100 OUTPUT.
  IF OB1_CONT IS NOT BOUND.
  SET PF-STATUS 'STATUS100'.
* LINK CUSTOM CONTROL WITH CUSTOM CONTAINER.
  CREATE OBJECT OB1_CONT
    EXPORTING
      CONTAINER_NAME              =  'CUSTCTRL1'.
* LINK ALV GRID WITH CUSTOM CONTAINER.
    CREATE OBJECT OB1_GRID
      EXPORTING
        I_PARENT          =  OB1_CONT.
* CUSTOMER DATA RETRIEVAL
    PERFORM GETKNA1.

   IF IT_KNA1 IS NOT INITIAL.
* REGISTER HANDLER FOR DOUBLE CLICK ON CUSTOMER DATA GRID.
   PERFORM REGISTERHANDLER.

* DISPLAY DATA KNA1.
     PERFORM DISPLAYKNA1.
   ENDIF.

 ENDIF.
ENDMODULE.                 " STATUS_0100  OUTPUT
MODULE USER_COMMAND_0100 INPUT.
    CASE SY-UCOMM.
        WHEN 'BACK'.
            LEAVE PROGRAM.
    ENDCASE.
ENDMODULE.                 " USER_COMMAND_0100  INPUT
FORM GETKNA1 .
     SELECT KUNNR NAME1 LAND1
        FROM KNA1
          INTO TABLE IT_KNA1
            WHERE KUNNR IN CUST_NO.
ENDFORM.                    " GETKNA1
FORM DISPLAYKNA1 .
      CALL METHOD OB1_GRID->SET_TABLE_FOR_FIRST_DISPLAY
        EXPORTING
            I_STRUCTURE_NAME            =  'ZROHITKNA1'
        CHANGING
          IT_OUTTAB                     =   IT_KNA1.

ENDFORM.                     " DISPLAYKNA1
FORM REGISTERHANDLER .
      CREATE OBJECT OB1.
      SET HANDLER OB1->HANDLE_DOUBLE_CLICK FOR OB1_GRID.
ENDFORM.                    " REGISTERHANDLER
FORM GETVBAK .
      REFRESH IT_VBAK.
        SELECT VBELN ERDAT ERZET ERNAM NETWR
           FROM VBAK INTO TABLE IT_VBAK
             WHERE KUNNR = WA_KNA1-KUNNR.
          IF SY-SUBRC EQ 0.
         REFRESH IT_FINAL_VBAK.
          LOOP AT IT_VBAK INTO WA_VBAK.
            CLEAR WA_FINAL_VBAK.
          WA_FINAL_VBAK-VBELN = WA_VBAK-VBELN.
          WA_FINAL_VBAK-ERDAT = WA_VBAK-ERDAT.
          WA_FINAL_VBAK-ERZET = WA_VBAK-ERZET.
          WA_FINAL_VBAK-ERNAM = WA_VBAK-ERNAM.
          WA_FINAL_VBAK-NETWR = WA_VBAK-NETWR.
            APPEND WA_FINAL_VBAK TO IT_FINAL_VBAK.
          ENDLOOP.
          ENDIF.
ENDFORM.                    " GETVBAK
MODULE STATUS_0200 OUTPUT.
  IF OB2_CONT IS NOT BOUND.
  SET PF-STATUS 'STATUS200'.
* LINK CONTAINER WITH CUSTOM CONTROL
     CREATE OBJECT OB2_CONT
       EXPORTING
         CONTAINER_NAME              = 'CUSTCTRL2'.
* LINK CONTAINER WITH GRID.
      CREATE OBJECT OB2_GRID
        EXPORTING
         I_PARENT          =  OB2_CONT.
* GENERATE FIELD CATALOG.
         PERFORM FLDCATVBAK.
* cell styling
         PERFORM CELLSTYLING.
* GENERATE LAYOUT.
         PERFORM LAYOUTVBAK.
* REGISTER HANDLER FOR BUTTON_CLICK.
         PERFORM HANDLER_REG.
* display the sales order data
         PERFORM DISPLAYVBAK.
      ELSE.
* cell styling
         PERFORM CELLSTYLING.
* REDISPLAY THE TABLE.
         CALL METHOD OB2_GRID->REFRESH_TABLE_DISPLAY.
ENDIF.

ENDMODULE.                 " STATUS_0200  OUTPUT
MODULE USER_COMMAND_0200 INPUT.
    CASE SY-UCOMM.
       WHEN 'BACK'.
         LEAVE TO SCREEN 100.
     ENDCASE.
ENDMODULE.                 " USER_COMMAND_0200  INPUT
FORM DISPLAYVBAK .
     CALL METHOD OB2_GRID->SET_TABLE_FOR_FIRST_DISPLAY
     EXPORTING
         IS_LAYOUT                       = WA_LAYO
       CHANGING
         IT_OUTTAB                     = IT_FINAL_VBAK
         IT_FIELDCATALOG               = IT_FCAT.

ENDFORM.                    " DISPLAYVBAK
FORM FLDCATVBAK .
* CALL FUNCTION MODULE
     CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING

        I_STRUCTURE_NAME             =  'ZROHITVBAK'
       CHANGING
         CT_FIELDCAT                  = IT_FCAT.
        IF IT_FCAT IS NOT INITIAL.
        CLEAR WA_FCAT.
          WA_FCAT-FIELDNAME = 'NETWR'.
          WA_FCAT-COL_POS = 5.
          WA_FCAT-COLTEXT = 'NET VALUE'.
          WA_FCAT-OUTPUTLEN = 20.
          WA_FCAT-STYLE = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON.
          APPEND WA_FCAT TO IT_FCAT.
        ENDIF.
ENDFORM.                    " FLDCATVBAK
FORM CELLSTYLING .
    LOOP AT IT_FINAL_VBAK INTO WA_FINAL_VBAK.
         IF WA_FINAL_VBAK-NETWR >= 20000.
           CLEAR WA_STYL.
         WA_STYL-FIELDNAME = 'VBELN'.
         WA_STYL-STYLE     = CL_GUI_ALV_GRID=>MC_STYLE_BUTTON.
         INSERT WA_STYL INTO TABLE WA_FINAL_VBAK-CELLSTYLE.
         MODIFY IT_FINAL_VBAK FROM WA_FINAL_VBAK TRANSPORTING CELLSTYLE.
         ENDIF.
    ENDLOOP.
ENDFORM.                    " CELLSTYLING
FORM LAYOUTVBAK .
   CLEAR WA_LAYO.
     WA_LAYO-STYLEFNAME  = 'CELLSTYLE'.
ENDFORM.                    " LAYOUTVBAK
FORM HANDLER_REG .
       SET HANDLER OB1->HANDLE_BUTTON_CLICK FOR OB2_GRID.
 ENDFORM.                    " HANDLER_REG
FORM GETVBAP .
     SELECT VBELN POSNR MATNR NETWR
         FROM VBAP
            INTO TABLE IT_VBAP
               WHERE VBELN = WA_FINAL_VBAK-VBELN.
ENDFORM.                    " GETVBAP
MODULE STATUS_0300 OUTPUT.
  IF OB3_CONT IS NOT BOUND.
      SET PF-STATUS 'STATUS300'.
* link custom container with custom control.
         CREATE OBJECT OB3_CONT
           EXPORTING
             CONTAINER_NAME              = 'CUSTCTRL3'.
* LINK ALV GRID WITH CUSTOM CONTAINER.
              CREATE OBJECT OB3_GRID
                EXPORTING
                  I_PARENT          =      OB3_CONT.
* GENERATE FIELD CATALOG MANUALLY.
         PERFORM FLDCATVBAP.
* REGISTER HANDLER HOTSPOT.
         PERFORM HANDLERREG1.
* DISPLAY SALES ITEM DATA VBAP.
         PERFORM DISPLAYVBAP.
    ELSE.
       CALL METHOD OB3_GRID->REFRESH_TABLE_DISPLAY.
  ENDIF.
ENDMODULE.                 " STATUS_0300  OUTPUT
MODULE USER_COMMAND_0300 INPUT.
   CASE SY-UCOMM.
      WHEN 'BACK'.
        LEAVE TO SCREEN 200.
    ENDCASE.
ENDMODULE.                 " USER_COMMAND_0300  INPUT
FORM FLDCATVBAP .
    REFRESH IT_FCAT.
    CLEAR WA_FCAT.
     WA_FCAT-FIELDNAME     =   'VBELN'.
     WA_FCAT-COL_POS       =    1.
     WA_FCAT-COLTEXT       =   'SALES DOCUMENT'.
     WA_FCAT-OUTPUTLEN     =   25.
     APPEND WA_FCAT TO IT_FCAT.

     WA_FCAT-FIELDNAME     =   'POSNR'.
     WA_FCAT-COL_POS       =    2.
     WA_FCAT-COLTEXT       =   'SALES ITEM'.
     WA_FCAT-OUTPUTLEN     =   25.
     APPEND WA_FCAT TO IT_FCAT.

     WA_FCAT-FIELDNAME     =   'MATNR'.
     WA_FCAT-COL_POS       =    3.
     WA_FCAT-COLTEXT       =   'MERIAL NO'.
     WA_FCAT-OUTPUTLEN     =   25.
     WA_FCAT-HOTSPOT       =   'X'.
     APPEND WA_FCAT TO IT_FCAT.

     WA_FCAT-FIELDNAME     =   'NETWR'.
     WA_FCAT-COL_POS       =    4.
     WA_FCAT-COLTEXT       =   'NET VALUE'.
     WA_FCAT-OUTPUTLEN     =   25.
     APPEND WA_FCAT TO IT_FCAT.


ENDFORM.                    " FLDCATVBAP
FORM DISPLAYVBAP .
      CALL METHOD OB3_GRID->SET_TABLE_FOR_FIRST_DISPLAY

        CHANGING
          IT_OUTTAB                     =  IT_VBAP
          IT_FIELDCATALOG               =  IT_FCAT.
ENDFORM.                    " DISPLAYVBAP
FORM HANDLERREG1 .
     SET HANDLER OB1->HANDLE_HOTSPOT_CLICK FOR OB3_GRID.
ENDFORM.            
